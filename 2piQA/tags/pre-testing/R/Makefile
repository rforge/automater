PACKAGES=${shell  ls -a -d Packages/*/..  | perl -pe 's/\/\.\.//g'  }

include Makevars.in
include Makevars.site

.PHONY:  R-version $(PACKAGES) 

default: R-version $(PACKAGES) 

test:
	@echo $(R)
	@echo $(MKR)

$(PACKAGES):   # PHONY  
	@$(MAKE) -k  --directory=$@


# Next is to set R-version file timestamp to the same value on all
#  test farm servers, since svn update does not preserve the timestamp.
# The first server to run with a new version of R should recognize this and
#  do the commit to update the R-version file

availableR=${shell $(MKR) --version  | grep 'R version'}
committedR=${shell head -1 R-version }
Rdate=${shell tail -1 R-version }

# locking could be done in the next but may be more touble than it is worth.
# if the commit does not happen then the lock will remain and cause problems
# on all other servers. On the other hand, if not locked then the commit may 
# fail because some other server commited first (talking a few seconds between 
# update and commit here). This would only cause this server to fail on this 
# target attempt, but will be automatically fixed next time.
#svn lock   $@ -m 'updating R-version to $(availableR).' ;

#  THIS IS ASSUMING DIFFERENT VERSION IS NEWER VERSION!!!!
R-version:
	@$(UPDATE)
	@if [ '$(committedR)' = '$(availableR)' ]; then \
	    touch --date "$(Rdate)"  $@ ;\
 	  else \
 	    echo changed R version ;\
	    echo '$(availableR)'             >$@ ;\
 	    date "+%Y/%m/%d %H:%M:%S.%N %Z" >>$@ ;\
	    $(COMMIT) 'R-version updated to $(availableR).'  $@;\
 	  fi


####################################################################

#     Targets below will not usually be run by farm servers

####################################################################

# assessSnip should depend on TESTABLE-$(OS_TAG) and STATUS_SUMMARY-$(OS_TAG), 
# for all OS_TAGs, as it needs to be redone if a new OS_TAG is added.
# However, individual servers have only one OS_TAG, 
# and the global list is determined by checking what have been generated.

assessSnippets: $(PACKAGES:%=%/assessSnippets)

$(PACKAGES:%=%/assessSnippets):
	$(MAKE)  --directory=$(dir $@) assessSnippets

# This target sets the R-version time stamp to a new date/time so that
# a complete remake will trigger. It is only for developement/debugging purposes.

fakeNewR-version:
	echo '$(availableR)'             >R-version 
	date "+%Y/%m/%d %H:%M:%S.%N %Z" >>R-version
	$(COMMIT) 'R-version $(availableR) time stamp reset.' R-version

# Next is used ONLY when new *.OS_TAG files need to be added
# run make first to generate the files (commits will fail) and then this
#  eg.  make svnAdd-MySQL
# where MySQL will need to correspond to the setting of OS_TAG
# This really depends on all the STATUS_SUMMARY-$(OS_TAG) $(TESTS:%=STATUS-%-$(OS_TAG))
#files in all the snippets, generated by prior running of make.
# Note that, if RESOURCES-ONLY has been set in Makevars.site, then 
#  only some of the files will have been generated.
svnAdd-$(OS_TAG): 
	@$(ADD) Packages/*/*/TESTABLE-$(OS_TAG)     
	@$(ADD) Packages/*/*/STATUS*$(OS_TAG)     
	@$(ADD) Packages/*/*/*.Rout-$(OS_TAG)     
	@$(ADD) Packages/*/*/*.rout-$(OS_TAG)     
	@$(COMMIT) "$(OS_TAG) Rout and SUMMARY files added." 

cleanAll: 
	@for f in $(PACKAGES)  ; do \
	    (cd $${f} && $(MAKE) clean ) || exit 1; done
	$(RM) */*/Makefile
